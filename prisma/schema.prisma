// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// User model
model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  username  String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role    Role     @default(USER)
  profile Profile?
  review  Review[]
}

// Profile model
model Profile {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  lastName  String
  bio       String?
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique @db.ObjectId
}

// Book model
model Book {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  isbn            String   @unique
  title           String
  author          String
  publicationDate DateTime
  publisher       String
  CoverImage      String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  genre   Genre[]  @relation(fields: [genreId], references: [id])
  genreId String[] @unique @db.ObjectId

  review Review[]
}

//Genre model
model Genre {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  book   Book[]   @relation(fields: [bookId], references: [id])
  bookId String[] @unique @db.ObjectId
}

//Review model
model Review {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  comment  String
  likes    Int?
  dislikes Int?

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique @db.ObjectId
  book   Book   @relation(fields: [bookId], references: [id])
  bookId String @unique @db.ObjectId
}

enum Role {
  USER
  ADMIN
}
